{"ast":null,"code":"import _regeneratorRuntime from \"/home/thomas/Bureau/TWILIO-TUTO/react-express-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/thomas/Bureau/TWILIO-TUTO/react-express-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/thomas/Bureau/TWILIO-TUTO/react-express-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/thomas/Bureau/TWILIO-TUTO/react-express-starter/src/VideoChat.js\";\nimport React, { useState, useCallback } from 'react';\nimport Lobby from './Lobby';\n\nconst VideoChat = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        username = _useState2[0],\n        setUsername = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        roomName = _useState4[0],\n        setRoomName = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        token = _useState6[0],\n        setToken = _useState6[1];\n\n  const handleUsernameChange = useCallback(event => {\n    setUsername(event.target.value);\n  }, []);\n  const handleRoomNameChange = useCallback(event => {\n    setRoomName(event.target.value);\n  }, []);\n  const handleSubmit = useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            event.preventDefault();\n            _context.next = 3;\n            return fetch('/video/token', {\n              method: 'POST',\n              body: JSON.stringify({\n                identity: username,\n                room: roomName\n              }),\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            }).then(res => res.json());\n\n          case 3:\n            data = _context.sent;\n            setToken(data.token);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [username, roomName]);\n  const handleLogout = useCallback(event => {\n    setToken(null);\n  }, []);\n  let render;\n\n  if (token) {\n    render = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, \"Username: \", username), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, \"Room name: \", roomName), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, \"Token: \", token));\n  } else {\n    render = /*#__PURE__*/React.createElement(Lobby, {\n      username: username,\n      roomName: roomName,\n      handleUsernameChange: handleUsernameChange,\n      handleRoomNameChange: handleRoomNameChange,\n      handleSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return render;\n};\n\nexport default VideoChat;","map":{"version":3,"sources":["/home/thomas/Bureau/TWILIO-TUTO/react-express-starter/src/VideoChat.js"],"names":["React","useState","useCallback","Lobby","VideoChat","username","setUsername","roomName","setRoomName","token","setToken","handleUsernameChange","event","target","value","handleRoomNameChange","handleSubmit","preventDefault","fetch","method","body","JSON","stringify","identity","room","headers","then","res","json","data","handleLogout","render"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA,oBACUH,QAAQ,CAAC,EAAD,CADlB;AAAA;AAAA,QACfI,QADe;AAAA,QACLC,WADK;;AAAA,qBAEUL,QAAQ,CAAC,EAAD,CAFlB;AAAA;AAAA,QAEfM,QAFe;AAAA,QAELC,WAFK;;AAAA,qBAGIP,QAAQ,CAAC,IAAD,CAHZ;AAAA;AAAA,QAGfQ,KAHe;AAAA,QAGRC,QAHQ;;AAKtB,QAAMC,oBAAoB,GAAGT,WAAW,CAACU,KAAK,IAAI;AAChDN,IAAAA,WAAW,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACD,GAFuC,EAErC,EAFqC,CAAxC;AAIA,QAAMC,oBAAoB,GAAGb,WAAW,CAACU,KAAK,IAAI;AAChDJ,IAAAA,WAAW,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACD,GAFuC,EAErC,EAFqC,CAAxC;AAIA,QAAME,YAAY,GAAGd,WAAW;AAAA,wEAAC,iBAAMU,KAAN;AAAA;AAAA;AAAA;AAAA;AAC/BA,YAAAA,KAAK,CAACK,cAAN;AAD+B;AAAA,mBAEZC,KAAK,CAAC,cAAD,EAAiB;AACvCC,cAAAA,MAAM,EAAE,MAD+B;AAEvCC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,gBAAAA,QAAQ,EAAElB,QADS;AAEnBmB,gBAAAA,IAAI,EAAEjB;AAFa,eAAf,CAFiC;AAMvCkB,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT;AAN8B,aAAjB,CAAL,CAShBC,IATgB,CASXC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EATI,CAFY;;AAAA;AAEzBC,YAAAA,IAFyB;AAY/BnB,YAAAA,QAAQ,CAACmB,IAAI,CAACpB,KAAN,CAAR;;AAZ+B;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;AAAA,OAa7B,CAACJ,QAAD,EAAWE,QAAX,CAb6B,CAAhC;AAeA,QAAMuB,YAAY,GAAG5B,WAAW,CAACU,KAAK,IAAI;AACxCF,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAF+B,EAE7B,EAF6B,CAAhC;AAIA,MAAIqB,MAAJ;;AACA,MAAItB,KAAJ,EAAW;AACTsB,IAAAA,MAAM,gBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAc1B,QAAd,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAeE,QAAf,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAWE,KAAX,CAHF,CADF;AAOD,GARD,MAQO;AACLsB,IAAAA,MAAM,gBACJ,oBAAC,KAAD;AACG,MAAA,QAAQ,EAAE1B,QADb;AAEG,MAAA,QAAQ,EAAEE,QAFb;AAGG,MAAA,oBAAoB,EAAEI,oBAHzB;AAIG,MAAA,oBAAoB,EAAEI,oBAJzB;AAKG,MAAA,YAAY,EAAEC,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD;;AACD,SAAOe,MAAP;AACD,CArDD;;AAuDA,eAAe3B,SAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport Lobby from './Lobby';\n\nconst VideoChat = () => {\n  const [username, setUsername] = useState('');\n  const [roomName, setRoomName] = useState('');\n  const [token, setToken] = useState(null);\n\n  const handleUsernameChange = useCallback(event => {\n    setUsername(event.target.value);\n  }, []);\n\n  const handleRoomNameChange = useCallback(event => {\n    setRoomName(event.target.value);\n  }, []);\n\n  const handleSubmit = useCallback(async event => {\n    event.preventDefault();\n    const data = await fetch('/video/token', {\n      method: 'POST',\n      body: JSON.stringify({\n        identity: username,\n        room: roomName\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json());\n    setToken(data.token);\n  }, [username, roomName]);\n\n  const handleLogout = useCallback(event => {\n    setToken(null);\n  }, []);\n\n  let render;\n  if (token) {\n    render = (\n      <div>\n        <p>Username: {username}</p>\n        <p>Room name: {roomName}</p>\n        <p>Token: {token}</p>\n      </div>\n    );\n  } else {\n    render = (\n      <Lobby\n         username={username}\n         roomName={roomName}\n         handleUsernameChange={handleUsernameChange}\n         handleRoomNameChange={handleRoomNameChange}\n         handleSubmit={handleSubmit}\n      />\n    );\n  }\n  return render;\n};\n\nexport default VideoChat;\n"]},"metadata":{},"sourceType":"module"}